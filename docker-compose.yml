version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: chat-websocket-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: chat-websocket-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: chat-websocket-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - FRONT_URL=http://localhost:3000
      - DATABASE_URL=postgresql://user:pass@postgres:5432/db
      - JWT_SECRET=ton_secret
    volumes:
      - ./back:/app
      - /app/node_modules
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: chat-websocket-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    volumes:
      - ./front:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
